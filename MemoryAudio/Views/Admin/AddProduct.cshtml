@model MemoryAudio.Models.Admin.AddProductModel
@{
    ViewBag.Title = "Thêm sản phẩm";
    Layout = "~/Views/Shared/_Admin.cshtml";
}
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Main content -->
    <section class="content">
        @using (Html.BeginForm())
        {
        @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-lg-12">
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">@ViewBag.Title</h3>
                    </div>
                    <div class="box-body">
                        <div class="form-group text-danger">
                            @Html.ValidationSummary()
                        </div>
                        <div class="row">
                            <div class="form-group col-lg-4">
                                <label for="CategoryId">Danh mục sản phẩm</label>
                                @Html.DropDownListFor(model => model.CategoryId, Model.CategorySelector, "--Chọn danh mục--", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-lg-4">
                                <label for="BrandId">Thương hiệu</label>
                                @Html.DropDownListFor(model => model.BrandId, Model.BrandSelector, "--Chọn thương hiệu--", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })
                            </div>
                            <div class="clearfix"></div>
                            <div class="form-group col-lg-8">
                                <label for="ProductName">Tên sản phẩm</label>
                                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                            </div>
                            
                            <div class="form-group col-lg-12">
                                <label for="Specification">Mô tả sản phẩm</label>
                                @Html.TextAreaFor(model => model.Specification, new { @class = "form-control", @type = "password" })
                                @Html.ValidationMessageFor(model => model.Specification, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-2">
                                <label for="Price">Giá bán</label>
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control input-number" } })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-2">
                                <label for="Discount">Giảm giá</label>
                                @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control input-number" } })
                                @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-2">
                                <label for="Discount">Giá niêm yết</label>
                                @Html.EditorFor(model => model.MSRP, new { htmlAttributes = new { @class = "form-control input-number" } })
                                @Html.ValidationMessageFor(model => model.MSRP, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-2">
                                <label for="TotalInStock">Tồn kho</label>
                                @Html.EditorFor(model => model.TotalInStock, new { htmlAttributes = new { @class = "form-control input-number" } })
                                @Html.ValidationMessageFor(model => model.TotalInStock, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-2">
                                <label for="Display">Trạng thái</label>
                                @Html.DropDownListFor(model => model.Display, Model.DisplaySelector, "--Hiển thị--", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Display, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-2">
                                <label for="SortIdx">Sắp xếp</label>
                                @Html.EditorFor(model => model.SortIdx, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SortIdx, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-lg-12">
                                <div class="form-group">
                                    <button type="submit" class="btn btn-sm btn-success" style="width:100px;">Lưu sản phẩm</button>
                                    <button type="reset" class="btn btn-sm btn-warning" style="width:100px;">Nhập lại</button>
                                    <a href="javascript:window.history.back();" class="btn btn-sm btn-primary" style="width:100px;">Trở về</a>
                                </div>
                            </div>
                            <div class="form-group col-md-3">
                                <label for="Image1">Ảnh 1</label>
                                @Html.EditorFor(model => model.Image1, new { htmlAttributes = new { @class = "form-control" } })
                                <img id="product-img1" src="@(String.IsNullOrWhiteSpace(Model.Image1) ? "/Content/img/no-image.png" : Model.Image1)" class="product-img" />
                            </div>
                            <div class="form-group col-md-3">
                                <label for="Image2">Ảnh 2</label>
                                @Html.EditorFor(model => model.Image2, new { htmlAttributes = new { @class = "form-control" } })
                                <img id="product-img2" src="@(String.IsNullOrWhiteSpace(Model.Image2) ? "/Content/img/no-image.png" : Model.Image2)" class="product-img" />
                            </div>
                            <div class="form-group col-md-3">
                                <label for="Image3">Ảnh 3</label>
                                @Html.EditorFor(model => model.Image3, new { htmlAttributes = new { @class = "form-control" } })
                                <img id="product-img3" src="@(String.IsNullOrWhiteSpace(Model.Image3) ? "/Content/img/no-image.png" : Model.Image3)" class="product-img" />
                            </div>
                            <div class="form-group col-md-3">
                                <label for="Image4">Ảnh 4</label>
                                @Html.EditorFor(model => model.Image4, new { htmlAttributes = new { @class = "form-control" } })
                                <img id="product-img4" src="@(String.IsNullOrWhiteSpace(Model.Image4) ? "/Content/img/no-image.png" : Model.Image4)" class="product-img" />
                            </div>
                            <div class="form-group col-md-3">
                                <label for="Image5">Ảnh 5</label>
                                @Html.EditorFor(model => model.Image5, new { htmlAttributes = new { @class = "form-control" } })
                                <img id="product-img5" src="@(String.IsNullOrWhiteSpace(Model.Image5) ? "/Content/img/no-image.png" : Model.Image5)" class="product-img" />
                            </div>
                            <div class="form-group col-md-3">
                                <label for="Image6">Ảnh 6</label>
                                @Html.EditorFor(model => model.Image6, new { htmlAttributes = new { @class = "form-control" } })
                                <img id="product-img6" src="@(String.IsNullOrWhiteSpace(Model.Image6) ? "/Content/img/no-image.png" : Model.Image6)" class="product-img" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        }
        <div class="clearfix"></div>

        <!-- The Modal -->
        <div id="modal" class="modal">

            <!-- The Close Button -->
            <span id="spanClose" class="close">&times;</span>

            <!-- Modal Content (The Image) -->
            <img id="imgContent" class="modal-content">

            <!-- Modal Caption (Image Text) -->
            <div id="caption"></div>
        </div>
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->
@section styles {
    <style>
        .product-img {
            border-radius: 5px;
            cursor: pointer;
            transition: 0.3s;
            margin-top: 8px;
            max-height: 128px;
        }

            .product-img:hover {
                opacity: 0.7;
            }

        /* The Modal (background) */
        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1; /* Sit on top */
            padding-top: 100px; /* Location of the box */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgb(0,0,0); /* Fallback color */
            background-color: rgba(0,0,0,0.9); /* Black w/ opacity */
        }

        /* Modal Content (image) */
        .modal-content {
            margin: auto;
            display: block;
            width: 80%;
            max-width: 700px;
        }

        /* Caption of Modal Image */
        #caption {
            margin: auto;
            display: block;
            width: 80%;
            max-width: 700px;
            text-align: center;
            color: #ccc;
            padding: 10px 0;
            height: 150px;
        }

        /* Add Animation */
        .modal-content, #caption {
            -webkit-animation-name: zoom;
            -webkit-animation-duration: 0.6s;
            animation-name: zoom;
            animation-duration: 0.6s;
        }

        @@-webkit-keyframes zoom {
            from {
                -webkit-transform: scale(0);
            }

            to {
                -webkit-transform: scale(1);
            }
        }

        @@keyframes zoom {
            from {
                transform: scale(0);
            }

            to {
                transform: scale(1);
            }
        }

        /* The Close Button */
        .close {
            position: absolute;
            top: 15px;
            right: 35px;
            color: #f1f1f1;
            font-size: 40px;
            font-weight: bold;
            transition: 0.3s;
        }

            .close:hover,
            .close:focus {
                color: #bbb;
                text-decoration: none;
                cursor: pointer;
            }

        /* 100% Image Width on Smaller Screens */
        @@media only screen and (max-width: 700px) {
            .modal-content {
                width: 100%;
            }
        }


        /* The Close Button */
        .close {
            position: absolute;
            top: 15px;
            right: 35px;
            color: #f1f1f1;
            font-size: 40px;
            font-weight: bold;
            transition: 0.3s;
        }

            .close:hover,
            .close:focus {
                color: #bbb;
                text-decoration: none;
                cursor: pointer;
            }
    </style>
}

@section scripts {
    <script src="~/Content/bower_components/ckeditor/ckeditor.js"></script>
    <script src="~/Content/bower_components/jquery-number/jquery.number.min.js"></script>
    <script>
            var modal = $("#modal");
            var imgContent = $("#imgContent");
            var spanClose = $("#spanClose");
            var caption = $("#caption");

            $(document).ready(function () {
                // Replace the <textarea id="editor1"> with a CKEditor
                // instance, using default configuration.
                CKEDITOR.replace('Specification')

                // View image
                $(".product-img").on("click", function () {
                    $(modal).show();
                    $(imgContent).attr("src", $(this).attr("src"));
                })

                // Number input
                $("#TotalInStock").number(true, 0);
                $("#SortIdx").number(true, 0);
                $("#Price").number(true, 0);
                $("#Discount").number(true, 0);
                $("#MSRP").number(true, 0);

                // Image inputs
                $("#Image1").on("change", function () {
                    var img_src = $(this).val().trim();
                    if (img_src != '') {
                        $("#product-img1").attr("src", img_src);
                    } else {
                        $("#product-img1").attr("src", "/Content/img/no-image.png");
                    }
                })
                $("#Image2").on("change", function () {
                    var img_src = $(this).val().trim();
                    if (img_src != '') {
                        $("#product-img2").attr("src", img_src);
                    } else {
                        $("#product-img2").attr("src", "/Content/img/no-image.png");
                    }
                })
                $("#Image3").on("change", function () {
                    var img_src = $(this).val().trim();
                    if (img_src != '') {
                        $("#product-img3").attr("src", img_src);
                    } else {
                        $("#product-img3").attr("src", "/Content/img/no-image.png");
                    }
                })
                $("#Image4").on("change", function () {
                    var img_src = $(this).val().trim();
                    if (img_src != '') {
                        $("#product-img4").attr("src", img_src);
                    } else {
                        $("#product-img4").attr("src", "/Content/img/no-image.png");
                    }
                })
                $("#Image5").on("change", function () {
                    var img_src = $(this).val().trim();
                    if (img_src != '') {
                        $("#product-img5").attr("src", img_src);
                    } else {
                        $("#product-img5").attr("src", "/Content/img/no-image.png");
                    }
                })
                $("#Image6").on("change", function () {
                    var img_src = $(this).val().trim();
                    if (img_src != '') {
                        $("#product-img6").attr("src", img_src);
                    } else {
                        $("#product-img6").attr("src", "/Content/img/no-image.png");
                    }
                })

                // When the user clicks on <span> (x), close the modal
                spanClose.on("click", function () {
                    modal.hide();
                })

                // Active system menu
                $(".nav-product").addClass("menu-open");
                $(".nav-product > ul").show();
            });
    </script>
}